// ===========================================================
// RTL generated by ActiveCore framework
// Date: 2025-02-25 16:58:03
// Copyright Alexander Antonov <antonov.alex.alex@gmail.com>
// ===========================================================

`include "Neuromorphic_design.svh"

module Neuromorphic_design (
	input logic unsigned [0:0] clk_i
	, input logic unsigned [0:0] rst_i
	, input logic unsigned [0:0] membrane_potential_syn_start
	, input logic unsigned [0:0] membrane_potential_start
	, input logic unsigned [0:0] neuron_compare_membrane_potential_start
);


logic unsigned [31:0] tick;
logic unsigned [31:0] tick_period;
logic unsigned [31:0] clk_counter;
logic unsigned [31:0] next_clk_count;
logic unsigned [0:0] presyn_output_spikes [10:0];
logic unsigned [0:0] postsyn_output_spikes [10:0];
logic signed [7:0] weight_static [9:0] [9:0];
logic unsigned [3:0] presyn_membrane_potential [9:0];
logic unsigned [3:0] postsyn_membrane_potential [9:0];
logic unsigned [0:0] reg_syn_start;
logic unsigned [3:0] current_syn_state;
logic unsigned [2:0] next_syn_state;
logic unsigned [9:0] postsyn_counter_synaptic;
logic unsigned [9:0] presyn_counter_synaptic;
logic unsigned [0:0] membrane_potentialreg_start_processing;
logic unsigned [3:0] membrane_potentialcurrent_state;
logic unsigned [2:0] membrane_potentialnext_state;
logic unsigned [9:0] membrane_potentialpostsyn_counter;
logic unsigned [0:0] postsynreg_start_processing;
logic unsigned [3:0] current_state;
logic unsigned [2:0] postsynnext_state;
logic unsigned [9:0] postsynpostsyn_counter;
logic unsigned [0:0] gen49_cyclix_genvar;
logic unsigned [0:0] gen50_cyclix_genvar;
logic unsigned [32:0] gen51_cyclix_genvar;
logic unsigned [0:0] gen52_cyclix_genvar;
logic unsigned [0:0] gen53_cyclix_genvar;
logic unsigned [0:0] gen54_cyclix_genvar;
logic unsigned [0:0] gen55_cyclix_genvar;
logic unsigned [0:0] gen56_cyclix_genvar;
logic unsigned [0:0] gen57_cyclix_genvar;
logic unsigned [0:0] gen58_cyclix_genvar;
logic unsigned [0:0] gen59_cyclix_genvar;
logic unsigned [0:0] gen60_cyclix_genvar;
logic unsigned [32:0] gen61_cyclix_genvar;
logic unsigned [0:0] gen62_cyclix_genvar;
logic unsigned [0:0] gen63_cyclix_genvar;
logic signed [8:0] gen64_cyclix_genvar;
logic unsigned [0:0] gen65_cyclix_genvar;
logic unsigned [0:0] gen66_cyclix_genvar;
logic unsigned [0:0] gen67_cyclix_genvar;
logic unsigned [0:0] gen68_cyclix_genvar;
logic unsigned [0:0] gen69_cyclix_genvar;
logic unsigned [0:0] gen70_cyclix_genvar;
logic unsigned [32:0] gen71_cyclix_genvar;
logic unsigned [0:0] gen72_cyclix_genvar;
logic unsigned [0:0] gen73_cyclix_genvar;
logic unsigned [0:0] gen74_cyclix_genvar;
logic unsigned [0:0] gen75_cyclix_genvar;
logic unsigned [0:0] gen76_cyclix_genvar;
logic unsigned [0:0] gen77_cyclix_genvar;
logic unsigned [0:0] gen78_cyclix_genvar;
logic unsigned [0:0] gen79_cyclix_genvar;
logic unsigned [3:0] gen80_cyclix_genvar;
logic unsigned [0:0] gen81_cyclix_genvar;
logic unsigned [0:0] gen82_cyclix_genvar;
logic unsigned [32:0] gen83_cyclix_genvar;
logic unsigned [0:0] gen84_cyclix_genvar;
logic unsigned [0:0] gen85_cyclix_genvar;
logic unsigned [0:0] gen86_cyclix_genvar;
logic unsigned [0:0] gen87_cyclix_genvar;
logic unsigned [0:0] gen88_cyclix_genvar;
logic unsigned [0:0] gen89_cyclix_genvar;
logic unsigned [0:0] gen90_cyclix_genvar;
logic unsigned [0:0] gen91_cyclix_genvar;
logic unsigned [32:0] gen92_cyclix_genvar;
logic unsigned [0:0] gen93_cyclix_genvar;
logic unsigned [0:0] gen94_cyclix_genvar;
logic unsigned [32:0] gen95_cyclix_genvar;
logic unsigned [0:0] gen96_cyclix_genvar;
logic unsigned [0:0] gen97_cyclix_genvar;
logic unsigned [0:0] gen0_rtl_var;
logic unsigned [0:0] gen1_rtl_var;
logic unsigned [0:0] gen2_rtl_var;
logic unsigned [0:0] gen3_rtl_var;
logic unsigned [0:0] gen4_rtl_var;
logic unsigned [0:0] gen5_rtl_var;
logic unsigned [0:0] gen6_rtl_var;
logic unsigned [0:0] gen7_rtl_var;
logic unsigned [0:0] gen8_rtl_var;
logic unsigned [0:0] gen9_rtl_var;
logic unsigned [0:0] gen10_rtl_var;
logic unsigned [0:0] gen11_rtl_var;
logic unsigned [0:0] gen12_rtl_var;
logic unsigned [0:0] gen13_rtl_var;
logic unsigned [0:0] gen14_rtl_var;
logic unsigned [0:0] gen15_rtl_var;
logic unsigned [0:0] gen16_rtl_var;
logic unsigned [0:0] gen17_rtl_var;
logic unsigned [0:0] gen18_rtl_var;
logic unsigned [0:0] gen19_rtl_var;
logic unsigned [0:0] gen20_rtl_var;

logic unsigned [31:0] gensticky_tick;
always_ff @(posedge clk_i)
	if (rst_i)
		begin
		gensticky_tick <= 32'd0;
		end
	else
		begin
		gensticky_tick <= tick;
		end

logic unsigned [31:0] gensticky_tick_period;
always_ff @(posedge clk_i)
	if (rst_i)
		begin
		gensticky_tick_period <= 32'd50;
		end
	else
		begin
		gensticky_tick_period <= tick_period;
		end

logic unsigned [31:0] gensticky_clk_counter;
always_ff @(posedge clk_i)
	if (rst_i)
		begin
		gensticky_clk_counter <= 32'd0;
		end
	else
		begin
		gensticky_clk_counter <= clk_counter;
		end

logic unsigned [31:0] gensticky_next_clk_count;
always_ff @(posedge clk_i)
	if (rst_i)
		begin
		gensticky_next_clk_count <= 32'd0;
		end
	else
		begin
		gensticky_next_clk_count <= next_clk_count;
		end

logic unsigned [0:0] gensticky_presyn_output_spikes [10:0];
always_ff @(posedge clk_i)
	if (rst_i)
		begin
		gensticky_presyn_output_spikes[0] <= 32'd0;
		gensticky_presyn_output_spikes[1] <= 32'd0;
		gensticky_presyn_output_spikes[2] <= 32'd0;
		gensticky_presyn_output_spikes[3] <= 32'd0;
		gensticky_presyn_output_spikes[4] <= 32'd0;
		gensticky_presyn_output_spikes[5] <= 32'd0;
		gensticky_presyn_output_spikes[6] <= 32'd0;
		gensticky_presyn_output_spikes[7] <= 32'd0;
		gensticky_presyn_output_spikes[8] <= 32'd0;
		gensticky_presyn_output_spikes[9] <= 32'd0;
		gensticky_presyn_output_spikes[10] <= 32'd0;
		end
	else
		begin
		gensticky_presyn_output_spikes[0] <= presyn_output_spikes[0];
		gensticky_presyn_output_spikes[1] <= presyn_output_spikes[1];
		gensticky_presyn_output_spikes[2] <= presyn_output_spikes[2];
		gensticky_presyn_output_spikes[3] <= presyn_output_spikes[3];
		gensticky_presyn_output_spikes[4] <= presyn_output_spikes[4];
		gensticky_presyn_output_spikes[5] <= presyn_output_spikes[5];
		gensticky_presyn_output_spikes[6] <= presyn_output_spikes[6];
		gensticky_presyn_output_spikes[7] <= presyn_output_spikes[7];
		gensticky_presyn_output_spikes[8] <= presyn_output_spikes[8];
		gensticky_presyn_output_spikes[9] <= presyn_output_spikes[9];
		gensticky_presyn_output_spikes[10] <= presyn_output_spikes[10];
		end

logic unsigned [0:0] gensticky_postsyn_output_spikes [10:0];
always_ff @(posedge clk_i)
	if (rst_i)
		begin
		gensticky_postsyn_output_spikes[0] <= 32'd0;
		gensticky_postsyn_output_spikes[1] <= 32'd0;
		gensticky_postsyn_output_spikes[2] <= 32'd0;
		gensticky_postsyn_output_spikes[3] <= 32'd0;
		gensticky_postsyn_output_spikes[4] <= 32'd0;
		gensticky_postsyn_output_spikes[5] <= 32'd0;
		gensticky_postsyn_output_spikes[6] <= 32'd0;
		gensticky_postsyn_output_spikes[7] <= 32'd0;
		gensticky_postsyn_output_spikes[8] <= 32'd0;
		gensticky_postsyn_output_spikes[9] <= 32'd0;
		gensticky_postsyn_output_spikes[10] <= 32'd0;
		end
	else
		begin
		gensticky_postsyn_output_spikes[0] <= postsyn_output_spikes[0];
		gensticky_postsyn_output_spikes[1] <= postsyn_output_spikes[1];
		gensticky_postsyn_output_spikes[2] <= postsyn_output_spikes[2];
		gensticky_postsyn_output_spikes[3] <= postsyn_output_spikes[3];
		gensticky_postsyn_output_spikes[4] <= postsyn_output_spikes[4];
		gensticky_postsyn_output_spikes[5] <= postsyn_output_spikes[5];
		gensticky_postsyn_output_spikes[6] <= postsyn_output_spikes[6];
		gensticky_postsyn_output_spikes[7] <= postsyn_output_spikes[7];
		gensticky_postsyn_output_spikes[8] <= postsyn_output_spikes[8];
		gensticky_postsyn_output_spikes[9] <= postsyn_output_spikes[9];
		gensticky_postsyn_output_spikes[10] <= postsyn_output_spikes[10];
		end

logic signed [7:0] gensticky_weight_static [9:0] [9:0];
always_ff @(posedge clk_i)
	if (rst_i)
		begin
		gensticky_weight_static[0][0] <= 32'd0;
		gensticky_weight_static[0][1] <= 32'd0;
		gensticky_weight_static[0][2] <= 32'd0;
		gensticky_weight_static[0][3] <= 32'd0;
		gensticky_weight_static[0][4] <= 32'd0;
		gensticky_weight_static[0][5] <= 32'd0;
		gensticky_weight_static[0][6] <= 32'd0;
		gensticky_weight_static[0][7] <= 32'd0;
		gensticky_weight_static[0][8] <= 32'd0;
		gensticky_weight_static[0][9] <= 32'd0;
		gensticky_weight_static[1][0] <= 32'd0;
		gensticky_weight_static[1][1] <= 32'd0;
		gensticky_weight_static[1][2] <= 32'd0;
		gensticky_weight_static[1][3] <= 32'd0;
		gensticky_weight_static[1][4] <= 32'd0;
		gensticky_weight_static[1][5] <= 32'd0;
		gensticky_weight_static[1][6] <= 32'd0;
		gensticky_weight_static[1][7] <= 32'd0;
		gensticky_weight_static[1][8] <= 32'd0;
		gensticky_weight_static[1][9] <= 32'd0;
		gensticky_weight_static[2][0] <= 32'd0;
		gensticky_weight_static[2][1] <= 32'd0;
		gensticky_weight_static[2][2] <= 32'd0;
		gensticky_weight_static[2][3] <= 32'd0;
		gensticky_weight_static[2][4] <= 32'd0;
		gensticky_weight_static[2][5] <= 32'd0;
		gensticky_weight_static[2][6] <= 32'd0;
		gensticky_weight_static[2][7] <= 32'd0;
		gensticky_weight_static[2][8] <= 32'd0;
		gensticky_weight_static[2][9] <= 32'd0;
		gensticky_weight_static[3][0] <= 32'd0;
		gensticky_weight_static[3][1] <= 32'd0;
		gensticky_weight_static[3][2] <= 32'd0;
		gensticky_weight_static[3][3] <= 32'd0;
		gensticky_weight_static[3][4] <= 32'd0;
		gensticky_weight_static[3][5] <= 32'd0;
		gensticky_weight_static[3][6] <= 32'd0;
		gensticky_weight_static[3][7] <= 32'd0;
		gensticky_weight_static[3][8] <= 32'd0;
		gensticky_weight_static[3][9] <= 32'd0;
		gensticky_weight_static[4][0] <= 32'd0;
		gensticky_weight_static[4][1] <= 32'd0;
		gensticky_weight_static[4][2] <= 32'd0;
		gensticky_weight_static[4][3] <= 32'd0;
		gensticky_weight_static[4][4] <= 32'd0;
		gensticky_weight_static[4][5] <= 32'd0;
		gensticky_weight_static[4][6] <= 32'd0;
		gensticky_weight_static[4][7] <= 32'd0;
		gensticky_weight_static[4][8] <= 32'd0;
		gensticky_weight_static[4][9] <= 32'd0;
		gensticky_weight_static[5][0] <= 32'd0;
		gensticky_weight_static[5][1] <= 32'd0;
		gensticky_weight_static[5][2] <= 32'd0;
		gensticky_weight_static[5][3] <= 32'd0;
		gensticky_weight_static[5][4] <= 32'd0;
		gensticky_weight_static[5][5] <= 32'd0;
		gensticky_weight_static[5][6] <= 32'd0;
		gensticky_weight_static[5][7] <= 32'd0;
		gensticky_weight_static[5][8] <= 32'd0;
		gensticky_weight_static[5][9] <= 32'd0;
		gensticky_weight_static[6][0] <= 32'd0;
		gensticky_weight_static[6][1] <= 32'd0;
		gensticky_weight_static[6][2] <= 32'd0;
		gensticky_weight_static[6][3] <= 32'd0;
		gensticky_weight_static[6][4] <= 32'd0;
		gensticky_weight_static[6][5] <= 32'd0;
		gensticky_weight_static[6][6] <= 32'd0;
		gensticky_weight_static[6][7] <= 32'd0;
		gensticky_weight_static[6][8] <= 32'd0;
		gensticky_weight_static[6][9] <= 32'd0;
		gensticky_weight_static[7][0] <= 32'd0;
		gensticky_weight_static[7][1] <= 32'd0;
		gensticky_weight_static[7][2] <= 32'd0;
		gensticky_weight_static[7][3] <= 32'd0;
		gensticky_weight_static[7][4] <= 32'd0;
		gensticky_weight_static[7][5] <= 32'd0;
		gensticky_weight_static[7][6] <= 32'd0;
		gensticky_weight_static[7][7] <= 32'd0;
		gensticky_weight_static[7][8] <= 32'd0;
		gensticky_weight_static[7][9] <= 32'd0;
		gensticky_weight_static[8][0] <= 32'd0;
		gensticky_weight_static[8][1] <= 32'd0;
		gensticky_weight_static[8][2] <= 32'd0;
		gensticky_weight_static[8][3] <= 32'd0;
		gensticky_weight_static[8][4] <= 32'd0;
		gensticky_weight_static[8][5] <= 32'd0;
		gensticky_weight_static[8][6] <= 32'd0;
		gensticky_weight_static[8][7] <= 32'd0;
		gensticky_weight_static[8][8] <= 32'd0;
		gensticky_weight_static[8][9] <= 32'd0;
		gensticky_weight_static[9][0] <= 32'd0;
		gensticky_weight_static[9][1] <= 32'd0;
		gensticky_weight_static[9][2] <= 32'd0;
		gensticky_weight_static[9][3] <= 32'd0;
		gensticky_weight_static[9][4] <= 32'd0;
		gensticky_weight_static[9][5] <= 32'd0;
		gensticky_weight_static[9][6] <= 32'd0;
		gensticky_weight_static[9][7] <= 32'd0;
		gensticky_weight_static[9][8] <= 32'd0;
		gensticky_weight_static[9][9] <= 32'd0;
		end
	else
		begin
		gensticky_weight_static[0][0] <= weight_static[0][0];
		gensticky_weight_static[0][1] <= weight_static[0][1];
		gensticky_weight_static[0][2] <= weight_static[0][2];
		gensticky_weight_static[0][3] <= weight_static[0][3];
		gensticky_weight_static[0][4] <= weight_static[0][4];
		gensticky_weight_static[0][5] <= weight_static[0][5];
		gensticky_weight_static[0][6] <= weight_static[0][6];
		gensticky_weight_static[0][7] <= weight_static[0][7];
		gensticky_weight_static[0][8] <= weight_static[0][8];
		gensticky_weight_static[0][9] <= weight_static[0][9];
		gensticky_weight_static[1][0] <= weight_static[1][0];
		gensticky_weight_static[1][1] <= weight_static[1][1];
		gensticky_weight_static[1][2] <= weight_static[1][2];
		gensticky_weight_static[1][3] <= weight_static[1][3];
		gensticky_weight_static[1][4] <= weight_static[1][4];
		gensticky_weight_static[1][5] <= weight_static[1][5];
		gensticky_weight_static[1][6] <= weight_static[1][6];
		gensticky_weight_static[1][7] <= weight_static[1][7];
		gensticky_weight_static[1][8] <= weight_static[1][8];
		gensticky_weight_static[1][9] <= weight_static[1][9];
		gensticky_weight_static[2][0] <= weight_static[2][0];
		gensticky_weight_static[2][1] <= weight_static[2][1];
		gensticky_weight_static[2][2] <= weight_static[2][2];
		gensticky_weight_static[2][3] <= weight_static[2][3];
		gensticky_weight_static[2][4] <= weight_static[2][4];
		gensticky_weight_static[2][5] <= weight_static[2][5];
		gensticky_weight_static[2][6] <= weight_static[2][6];
		gensticky_weight_static[2][7] <= weight_static[2][7];
		gensticky_weight_static[2][8] <= weight_static[2][8];
		gensticky_weight_static[2][9] <= weight_static[2][9];
		gensticky_weight_static[3][0] <= weight_static[3][0];
		gensticky_weight_static[3][1] <= weight_static[3][1];
		gensticky_weight_static[3][2] <= weight_static[3][2];
		gensticky_weight_static[3][3] <= weight_static[3][3];
		gensticky_weight_static[3][4] <= weight_static[3][4];
		gensticky_weight_static[3][5] <= weight_static[3][5];
		gensticky_weight_static[3][6] <= weight_static[3][6];
		gensticky_weight_static[3][7] <= weight_static[3][7];
		gensticky_weight_static[3][8] <= weight_static[3][8];
		gensticky_weight_static[3][9] <= weight_static[3][9];
		gensticky_weight_static[4][0] <= weight_static[4][0];
		gensticky_weight_static[4][1] <= weight_static[4][1];
		gensticky_weight_static[4][2] <= weight_static[4][2];
		gensticky_weight_static[4][3] <= weight_static[4][3];
		gensticky_weight_static[4][4] <= weight_static[4][4];
		gensticky_weight_static[4][5] <= weight_static[4][5];
		gensticky_weight_static[4][6] <= weight_static[4][6];
		gensticky_weight_static[4][7] <= weight_static[4][7];
		gensticky_weight_static[4][8] <= weight_static[4][8];
		gensticky_weight_static[4][9] <= weight_static[4][9];
		gensticky_weight_static[5][0] <= weight_static[5][0];
		gensticky_weight_static[5][1] <= weight_static[5][1];
		gensticky_weight_static[5][2] <= weight_static[5][2];
		gensticky_weight_static[5][3] <= weight_static[5][3];
		gensticky_weight_static[5][4] <= weight_static[5][4];
		gensticky_weight_static[5][5] <= weight_static[5][5];
		gensticky_weight_static[5][6] <= weight_static[5][6];
		gensticky_weight_static[5][7] <= weight_static[5][7];
		gensticky_weight_static[5][8] <= weight_static[5][8];
		gensticky_weight_static[5][9] <= weight_static[5][9];
		gensticky_weight_static[6][0] <= weight_static[6][0];
		gensticky_weight_static[6][1] <= weight_static[6][1];
		gensticky_weight_static[6][2] <= weight_static[6][2];
		gensticky_weight_static[6][3] <= weight_static[6][3];
		gensticky_weight_static[6][4] <= weight_static[6][4];
		gensticky_weight_static[6][5] <= weight_static[6][5];
		gensticky_weight_static[6][6] <= weight_static[6][6];
		gensticky_weight_static[6][7] <= weight_static[6][7];
		gensticky_weight_static[6][8] <= weight_static[6][8];
		gensticky_weight_static[6][9] <= weight_static[6][9];
		gensticky_weight_static[7][0] <= weight_static[7][0];
		gensticky_weight_static[7][1] <= weight_static[7][1];
		gensticky_weight_static[7][2] <= weight_static[7][2];
		gensticky_weight_static[7][3] <= weight_static[7][3];
		gensticky_weight_static[7][4] <= weight_static[7][4];
		gensticky_weight_static[7][5] <= weight_static[7][5];
		gensticky_weight_static[7][6] <= weight_static[7][6];
		gensticky_weight_static[7][7] <= weight_static[7][7];
		gensticky_weight_static[7][8] <= weight_static[7][8];
		gensticky_weight_static[7][9] <= weight_static[7][9];
		gensticky_weight_static[8][0] <= weight_static[8][0];
		gensticky_weight_static[8][1] <= weight_static[8][1];
		gensticky_weight_static[8][2] <= weight_static[8][2];
		gensticky_weight_static[8][3] <= weight_static[8][3];
		gensticky_weight_static[8][4] <= weight_static[8][4];
		gensticky_weight_static[8][5] <= weight_static[8][5];
		gensticky_weight_static[8][6] <= weight_static[8][6];
		gensticky_weight_static[8][7] <= weight_static[8][7];
		gensticky_weight_static[8][8] <= weight_static[8][8];
		gensticky_weight_static[8][9] <= weight_static[8][9];
		gensticky_weight_static[9][0] <= weight_static[9][0];
		gensticky_weight_static[9][1] <= weight_static[9][1];
		gensticky_weight_static[9][2] <= weight_static[9][2];
		gensticky_weight_static[9][3] <= weight_static[9][3];
		gensticky_weight_static[9][4] <= weight_static[9][4];
		gensticky_weight_static[9][5] <= weight_static[9][5];
		gensticky_weight_static[9][6] <= weight_static[9][6];
		gensticky_weight_static[9][7] <= weight_static[9][7];
		gensticky_weight_static[9][8] <= weight_static[9][8];
		gensticky_weight_static[9][9] <= weight_static[9][9];
		end

logic unsigned [3:0] gensticky_presyn_membrane_potential [9:0];
always_ff @(posedge clk_i)
	if (rst_i)
		begin
		gensticky_presyn_membrane_potential[0] <= 32'd0;
		gensticky_presyn_membrane_potential[1] <= 32'd0;
		gensticky_presyn_membrane_potential[2] <= 32'd0;
		gensticky_presyn_membrane_potential[3] <= 32'd0;
		gensticky_presyn_membrane_potential[4] <= 32'd0;
		gensticky_presyn_membrane_potential[5] <= 32'd0;
		gensticky_presyn_membrane_potential[6] <= 32'd0;
		gensticky_presyn_membrane_potential[7] <= 32'd0;
		gensticky_presyn_membrane_potential[8] <= 32'd0;
		gensticky_presyn_membrane_potential[9] <= 32'd0;
		end
	else
		begin
		gensticky_presyn_membrane_potential[0] <= presyn_membrane_potential[0];
		gensticky_presyn_membrane_potential[1] <= presyn_membrane_potential[1];
		gensticky_presyn_membrane_potential[2] <= presyn_membrane_potential[2];
		gensticky_presyn_membrane_potential[3] <= presyn_membrane_potential[3];
		gensticky_presyn_membrane_potential[4] <= presyn_membrane_potential[4];
		gensticky_presyn_membrane_potential[5] <= presyn_membrane_potential[5];
		gensticky_presyn_membrane_potential[6] <= presyn_membrane_potential[6];
		gensticky_presyn_membrane_potential[7] <= presyn_membrane_potential[7];
		gensticky_presyn_membrane_potential[8] <= presyn_membrane_potential[8];
		gensticky_presyn_membrane_potential[9] <= presyn_membrane_potential[9];
		end

logic unsigned [3:0] gensticky_postsyn_membrane_potential [9:0];
always_ff @(posedge clk_i)
	if (rst_i)
		begin
		gensticky_postsyn_membrane_potential[0] <= 32'd0;
		gensticky_postsyn_membrane_potential[1] <= 32'd0;
		gensticky_postsyn_membrane_potential[2] <= 32'd0;
		gensticky_postsyn_membrane_potential[3] <= 32'd0;
		gensticky_postsyn_membrane_potential[4] <= 32'd0;
		gensticky_postsyn_membrane_potential[5] <= 32'd0;
		gensticky_postsyn_membrane_potential[6] <= 32'd0;
		gensticky_postsyn_membrane_potential[7] <= 32'd0;
		gensticky_postsyn_membrane_potential[8] <= 32'd0;
		gensticky_postsyn_membrane_potential[9] <= 32'd0;
		end
	else
		begin
		gensticky_postsyn_membrane_potential[0] <= postsyn_membrane_potential[0];
		gensticky_postsyn_membrane_potential[1] <= postsyn_membrane_potential[1];
		gensticky_postsyn_membrane_potential[2] <= postsyn_membrane_potential[2];
		gensticky_postsyn_membrane_potential[3] <= postsyn_membrane_potential[3];
		gensticky_postsyn_membrane_potential[4] <= postsyn_membrane_potential[4];
		gensticky_postsyn_membrane_potential[5] <= postsyn_membrane_potential[5];
		gensticky_postsyn_membrane_potential[6] <= postsyn_membrane_potential[6];
		gensticky_postsyn_membrane_potential[7] <= postsyn_membrane_potential[7];
		gensticky_postsyn_membrane_potential[8] <= postsyn_membrane_potential[8];
		gensticky_postsyn_membrane_potential[9] <= postsyn_membrane_potential[9];
		end

logic unsigned [0:0] gensticky_reg_syn_start;
always_ff @(posedge clk_i)
	if (rst_i)
		begin
		gensticky_reg_syn_start <= 32'd0;
		end
	else
		begin
		gensticky_reg_syn_start <= reg_syn_start;
		end

logic unsigned [3:0] gensticky_current_syn_state;
always_ff @(posedge clk_i)
	if (rst_i)
		begin
		gensticky_current_syn_state <= 32'd0;
		end
	else
		begin
		gensticky_current_syn_state <= current_syn_state;
		end

logic unsigned [2:0] gensticky_next_syn_state;
always_ff @(posedge clk_i)
	if (rst_i)
		begin
		gensticky_next_syn_state <= 32'd0;
		end
	else
		begin
		gensticky_next_syn_state <= next_syn_state;
		end

logic unsigned [9:0] gensticky_postsyn_counter_synaptic;
always_ff @(posedge clk_i)
	if (rst_i)
		begin
		gensticky_postsyn_counter_synaptic <= 32'd0;
		end
	else
		begin
		gensticky_postsyn_counter_synaptic <= postsyn_counter_synaptic;
		end

logic unsigned [9:0] gensticky_presyn_counter_synaptic;
always_ff @(posedge clk_i)
	if (rst_i)
		begin
		gensticky_presyn_counter_synaptic <= 32'd0;
		end
	else
		begin
		gensticky_presyn_counter_synaptic <= presyn_counter_synaptic;
		end

logic unsigned [0:0] gensticky_membrane_potentialreg_start_processing;
always_ff @(posedge clk_i)
	if (rst_i)
		begin
		gensticky_membrane_potentialreg_start_processing <= 32'd0;
		end
	else
		begin
		gensticky_membrane_potentialreg_start_processing <= membrane_potentialreg_start_processing;
		end

logic unsigned [3:0] gensticky_membrane_potentialcurrent_state;
always_ff @(posedge clk_i)
	if (rst_i)
		begin
		gensticky_membrane_potentialcurrent_state <= 32'd0;
		end
	else
		begin
		gensticky_membrane_potentialcurrent_state <= membrane_potentialcurrent_state;
		end

logic unsigned [2:0] gensticky_membrane_potentialnext_state;
always_ff @(posedge clk_i)
	if (rst_i)
		begin
		gensticky_membrane_potentialnext_state <= 32'd0;
		end
	else
		begin
		gensticky_membrane_potentialnext_state <= membrane_potentialnext_state;
		end

logic unsigned [9:0] gensticky_membrane_potentialpostsyn_counter;
always_ff @(posedge clk_i)
	if (rst_i)
		begin
		gensticky_membrane_potentialpostsyn_counter <= 32'd0;
		end
	else
		begin
		gensticky_membrane_potentialpostsyn_counter <= membrane_potentialpostsyn_counter;
		end

logic unsigned [0:0] gensticky_postsynreg_start_processing;
always_ff @(posedge clk_i)
	if (rst_i)
		begin
		gensticky_postsynreg_start_processing <= 32'd0;
		end
	else
		begin
		gensticky_postsynreg_start_processing <= postsynreg_start_processing;
		end

logic unsigned [3:0] gensticky_current_state;
always_ff @(posedge clk_i)
	if (rst_i)
		begin
		gensticky_current_state <= 32'd0;
		end
	else
		begin
		gensticky_current_state <= current_state;
		end

logic unsigned [2:0] gensticky_postsynnext_state;
always_ff @(posedge clk_i)
	if (rst_i)
		begin
		gensticky_postsynnext_state <= 32'd0;
		end
	else
		begin
		gensticky_postsynnext_state <= postsynnext_state;
		end

logic unsigned [9:0] gensticky_postsynpostsyn_counter;
always_ff @(posedge clk_i)
	if (rst_i)
		begin
		gensticky_postsynpostsyn_counter <= 32'd0;
		end
	else
		begin
		gensticky_postsynpostsyn_counter <= postsynpostsyn_counter;
		end


always_comb
	begin
	tick = 32'd0;
	gen51_cyclix_genvar = 32'd0;
	next_clk_count = 32'd0;
	clk_counter = 32'd0;
	postsyn_counter_synaptic = 32'd0;
	next_syn_state = 32'd0;
	gen55_cyclix_genvar = 32'd0;
	gen56_cyclix_genvar = 32'd0;
	gen3_rtl_var = 32'd0;
	gen64_cyclix_genvar = 32'd0;
	postsyn_membrane_potential[0] = 32'd0;
	postsyn_membrane_potential[1] = 32'd0;
	postsyn_membrane_potential[2] = 32'd0;
	postsyn_membrane_potential[3] = 32'd0;
	postsyn_membrane_potential[4] = 32'd0;
	postsyn_membrane_potential[5] = 32'd0;
	postsyn_membrane_potential[6] = 32'd0;
	postsyn_membrane_potential[7] = 32'd0;
	postsyn_membrane_potential[8] = 32'd0;
	postsyn_membrane_potential[9] = 32'd0;
	gen61_cyclix_genvar = 32'd0;
	presyn_counter_synaptic = 32'd0;
	gen62_cyclix_genvar = 32'd0;
	gen63_cyclix_genvar = 32'd0;
	gen6_rtl_var = 32'd0;
	gen59_cyclix_genvar = 32'd0;
	gen60_cyclix_genvar = 32'd0;
	gen5_rtl_var = 32'd0;
	gen65_cyclix_genvar = 32'd0;
	gen66_cyclix_genvar = 32'd0;
	gen7_rtl_var = 32'd0;
	gen71_cyclix_genvar = 32'd0;
	gen69_cyclix_genvar = 32'd0;
	gen70_cyclix_genvar = 32'd0;
	gen9_rtl_var = 32'd0;
	membrane_potentialpostsyn_counter = 32'd0;
	membrane_potentialnext_state = 32'd0;
	gen76_cyclix_genvar = 32'd0;
	gen77_cyclix_genvar = 32'd0;
	gen12_rtl_var = 32'd0;
	gen80_cyclix_genvar = 32'd0;
	gen83_cyclix_genvar = 32'd0;
	postsynpostsyn_counter = 32'd0;
	postsynnext_state = 32'd0;
	gen88_cyclix_genvar = 32'd0;
	gen89_cyclix_genvar = 32'd0;
	gen17_rtl_var = 32'd0;
	gen92_cyclix_genvar = 32'd0;
	gen95_cyclix_genvar = 32'd0;
	tick_period = gensticky_tick_period;
	tick = gensticky_tick;
	next_clk_count = gensticky_next_clk_count;
	clk_counter = gensticky_clk_counter;
	reg_syn_start = gensticky_reg_syn_start;
	current_syn_state = gensticky_current_syn_state;
	postsyn_counter_synaptic = gensticky_postsyn_counter_synaptic;
	next_syn_state = gensticky_next_syn_state;
	presyn_counter_synaptic = gensticky_presyn_counter_synaptic;
	postsyn_membrane_potential[0] = gensticky_postsyn_membrane_potential[0];
	postsyn_membrane_potential[1] = gensticky_postsyn_membrane_potential[1];
	postsyn_membrane_potential[2] = gensticky_postsyn_membrane_potential[2];
	postsyn_membrane_potential[3] = gensticky_postsyn_membrane_potential[3];
	postsyn_membrane_potential[4] = gensticky_postsyn_membrane_potential[4];
	postsyn_membrane_potential[5] = gensticky_postsyn_membrane_potential[5];
	postsyn_membrane_potential[6] = gensticky_postsyn_membrane_potential[6];
	postsyn_membrane_potential[7] = gensticky_postsyn_membrane_potential[7];
	postsyn_membrane_potential[8] = gensticky_postsyn_membrane_potential[8];
	postsyn_membrane_potential[9] = gensticky_postsyn_membrane_potential[9];
	membrane_potentialreg_start_processing = gensticky_membrane_potentialreg_start_processing;
	membrane_potentialcurrent_state = gensticky_membrane_potentialcurrent_state;
	membrane_potentialpostsyn_counter = gensticky_membrane_potentialpostsyn_counter;
	membrane_potentialnext_state = gensticky_membrane_potentialnext_state;
	postsynreg_start_processing = gensticky_postsynreg_start_processing;
	current_state = gensticky_current_state;
	postsynpostsyn_counter = gensticky_postsynpostsyn_counter;
	postsynnext_state = gensticky_postsynnext_state;
	// Buffering globals
	// Processing dlychains
	// fifo_in buffering
	// subproc fifo_in buffering
	// Payload logic
	tick_period = 32'd500;
	gen49_cyclix_genvar = (tick_period != clk_counter);
	gen50_cyclix_genvar = gen49_cyclix_genvar;
	gen0_rtl_var = gen50_cyclix_genvar;
	if (gen0_rtl_var)
		begin
		tick = 32'd0;
		gen51_cyclix_genvar = (clk_counter + 32'd1);
		next_clk_count = gen51_cyclix_genvar;
		clk_counter = next_clk_count;
		end
	gen52_cyclix_genvar = 1'd0;
	gen52_cyclix_genvar = (gen52_cyclix_genvar || gen50_cyclix_genvar);
	gen52_cyclix_genvar = !gen52_cyclix_genvar;
	gen1_rtl_var = gen52_cyclix_genvar;
	if (gen1_rtl_var)
		begin
		tick = 32'd1;
		clk_counter = 32'd0;
		end
	reg_syn_start = membrane_potential_syn_start;
	current_syn_state = next_syn_state;
	gen53_cyclix_genvar = (reg_syn_start == 32'd1);
	gen54_cyclix_genvar = gen53_cyclix_genvar;
	gen2_rtl_var = gen54_cyclix_genvar;
	if (gen2_rtl_var)
		begin
		gen55_cyclix_genvar = (current_syn_state == 32'd0);
		gen56_cyclix_genvar = gen55_cyclix_genvar;
		gen3_rtl_var = gen56_cyclix_genvar;
		if (gen3_rtl_var)
			begin
			postsyn_counter_synaptic = 32'd0;
			next_syn_state = 32'd1;
			end
		end
	gen57_cyclix_genvar = (current_syn_state == 32'd1);
	gen58_cyclix_genvar = gen57_cyclix_genvar;
	gen4_rtl_var = gen58_cyclix_genvar;
	if (gen4_rtl_var)
		begin
		gen59_cyclix_genvar = (presyn_counter_synaptic < 32'd10);
		gen60_cyclix_genvar = gen59_cyclix_genvar;
		gen5_rtl_var = gen60_cyclix_genvar;
		if (gen5_rtl_var)
			begin
			gen61_cyclix_genvar = (presyn_counter_synaptic + 32'd1);
			presyn_counter_synaptic = gen61_cyclix_genvar;
			gen62_cyclix_genvar = (postsyn_output_spikes[presyn_counter_synaptic] == 32'd1);
			gen63_cyclix_genvar = gen62_cyclix_genvar;
			gen6_rtl_var = gen63_cyclix_genvar;
			if (gen6_rtl_var)
				begin
				gen64_cyclix_genvar = (weight_static[presyn_counter_synaptic][postsyn_counter_synaptic] + postsyn_membrane_potential[postsyn_counter_synaptic]);
				postsyn_membrane_potential[postsyn_counter_synaptic] = gen64_cyclix_genvar;
				end
			end
		gen65_cyclix_genvar = (presyn_counter_synaptic == 32'd9);
		gen66_cyclix_genvar = gen65_cyclix_genvar;
		gen7_rtl_var = gen66_cyclix_genvar;
		if (gen7_rtl_var)
			begin
			next_syn_state = 32'd2;
			end
		end
	gen67_cyclix_genvar = (current_syn_state == 32'd2);
	gen68_cyclix_genvar = gen67_cyclix_genvar;
	gen8_rtl_var = gen68_cyclix_genvar;
	if (gen8_rtl_var)
		begin
		gen69_cyclix_genvar = (postsyn_counter_synaptic < 32'd9);
		gen70_cyclix_genvar = gen69_cyclix_genvar;
		gen9_rtl_var = gen70_cyclix_genvar;
		if (gen9_rtl_var)
			begin
			gen71_cyclix_genvar = (postsyn_counter_synaptic + 32'd1);
			postsyn_counter_synaptic = gen71_cyclix_genvar;
			presyn_counter_synaptic = 32'd0;
			next_syn_state = 32'd1;
			end
		end
	gen72_cyclix_genvar = (current_syn_state == 32'd3);
	gen73_cyclix_genvar = gen72_cyclix_genvar;
	gen10_rtl_var = gen73_cyclix_genvar;
	if (gen10_rtl_var)
		begin
		next_syn_state = 32'd0;
		end
	membrane_potentialreg_start_processing = membrane_potential_start;
	membrane_potentialcurrent_state = membrane_potentialnext_state;
	gen74_cyclix_genvar = (membrane_potentialreg_start_processing == 32'd1);
	gen75_cyclix_genvar = gen74_cyclix_genvar;
	gen11_rtl_var = gen75_cyclix_genvar;
	if (gen11_rtl_var)
		begin
		gen76_cyclix_genvar = (membrane_potentialcurrent_state == 32'd0);
		gen77_cyclix_genvar = gen76_cyclix_genvar;
		gen12_rtl_var = gen77_cyclix_genvar;
		if (gen12_rtl_var)
			begin
			membrane_potentialpostsyn_counter = 32'd0;
			membrane_potentialnext_state = 32'd3;
			end
		end
	gen78_cyclix_genvar = (membrane_potentialcurrent_state == 32'd3);
	gen79_cyclix_genvar = gen78_cyclix_genvar;
	gen13_rtl_var = gen79_cyclix_genvar;
	if (gen13_rtl_var)
		begin
		gen80_cyclix_genvar = (postsyn_membrane_potential[membrane_potentialpostsyn_counter] >>> 32'd1);
		postsyn_membrane_potential[membrane_potentialpostsyn_counter] = gen80_cyclix_genvar;
		end
	gen81_cyclix_genvar = (membrane_potentialcurrent_state == 32'd1);
	gen82_cyclix_genvar = gen81_cyclix_genvar;
	gen14_rtl_var = gen82_cyclix_genvar;
	if (gen14_rtl_var)
		begin
		gen83_cyclix_genvar = (membrane_potentialpostsyn_counter + 32'd1);
		membrane_potentialpostsyn_counter = gen83_cyclix_genvar;
		membrane_potentialnext_state = 32'd3;
		end
	gen84_cyclix_genvar = (membrane_potentialcurrent_state == 32'd2);
	gen85_cyclix_genvar = gen84_cyclix_genvar;
	gen15_rtl_var = gen85_cyclix_genvar;
	if (gen15_rtl_var)
		begin
		membrane_potentialnext_state = 32'd0;
		end
	postsynreg_start_processing = neuron_compare_membrane_potential_start;
	current_state = postsynnext_state;
	gen86_cyclix_genvar = (postsynreg_start_processing == 32'd1);
	gen87_cyclix_genvar = gen86_cyclix_genvar;
	gen16_rtl_var = gen87_cyclix_genvar;
	if (gen16_rtl_var)
		begin
		gen88_cyclix_genvar = (current_state == 32'd0);
		gen89_cyclix_genvar = gen88_cyclix_genvar;
		gen17_rtl_var = gen89_cyclix_genvar;
		if (gen17_rtl_var)
			begin
			postsynpostsyn_counter = 32'd0;
			postsynnext_state = 32'd3;
			end
		end
	gen90_cyclix_genvar = (current_state == 32'd3);
	gen91_cyclix_genvar = gen90_cyclix_genvar;
	gen18_rtl_var = gen91_cyclix_genvar;
	if (gen18_rtl_var)
		begin
		gen92_cyclix_genvar = (postsyn_membrane_potential[postsynpostsyn_counter] - 32'd1);
		postsyn_membrane_potential[postsynpostsyn_counter] = gen92_cyclix_genvar;
		end
	gen93_cyclix_genvar = (current_state == 32'd1);
	gen94_cyclix_genvar = gen93_cyclix_genvar;
	gen19_rtl_var = gen94_cyclix_genvar;
	if (gen19_rtl_var)
		begin
		gen95_cyclix_genvar = (postsynpostsyn_counter + 32'd1);
		postsynpostsyn_counter = gen95_cyclix_genvar;
		postsynnext_state = 32'd3;
		end
	gen96_cyclix_genvar = (current_state == 32'd2);
	gen97_cyclix_genvar = gen96_cyclix_genvar;
	gen20_rtl_var = gen97_cyclix_genvar;
	if (gen20_rtl_var)
		begin
		postsynnext_state = 32'd0;
		end
	end


endmodule
